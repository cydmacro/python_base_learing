"""
Day 1 测评 - 实操题2: 用户信息收集系统
解法2: 字典版 - 使用字典存储(Day3会学)
难度: ★★★☆☆
适合: 展示更专业的数据组织方式
"""

# ============ 知识点 ============
# 1. 字典的创建和使用
# 2. 字典的键值对访问
# 3. 字典的遍历输出

# ============ 实战技巧 ============
# 1. 用字典组织相关数据
# 2. 便于后续扩展和处理
# 3. 代码结构更清晰

# ============ 易错点 ============
# 1. 字典键名的拼写
# 2. 访问不存在的键会报错

# ============ 扩展思考 ============
# 1. 如何将字典保存到文件？
# 2. 如何批量处理多个用户？

print("=" * 50)
print("用户信息收集系统 - 字典版")
print("=" * 50)

# 收集用户信息
print("\n请输入您的个人信息:")

# 方式1: 分别输入再组装成字典
name = input("  姓名: ")
age = int(input("  年龄: "))
city = input("  城市: ")
hobby = input("  爱好: ")

# 创建用户字典
user_info = {
    "姓名": name,
    "年龄": age,
    "城市": city,
    "爱好": hobby
}

# 显示收集的信息
print("\n" + "=" * 50)
print("您输入的信息:")
print("=" * 50)

# 方式1: 直接访问字典
print(f"姓名: {user_info['姓名']}")
print(f"年龄: {user_info['年龄']}岁")
print(f"城市: {user_info['城市']}")
print(f"爱好: {user_info['爱好']}")

print("\n" + "-" * 50)

# 方式2: 遍历字典(更优雅)
print("【使用循环输出】")
for key, value in user_info.items():
    if key == "年龄":
        print(f"{key}: {value}岁")
    else:
        print(f"{key}: {value}")

print("=" * 50)
print("\n感谢您的填写！")
print(f"\n系统已记录用户: {user_info['姓名']}")
